{"version":3,"file":"static/js/276.6936b115.chunk.js","mappings":"6RACA,EAA6F,4BAA7F,EAAiI,uBCAjI,EAAuB,mB,SCEVA,EAAI,qGAYZ,OAZY,8BACb,SAAOC,GAEH,OACI,iBAAKC,UAAWC,EAAa,WACzB,gBAAKC,IAAI,IAAIC,IAAI,wIAChBC,KAAKL,MAAMM,SACZ,0BACA,4BAAM,QAAMD,KAAKL,MAAMO,kBAInC,KAAC,EAZY,CAASC,EAAAA,WAe1B,I,oBCPaC,EAAU,SAAAT,GACrBU,QAAQC,IAAI,UACZ,IAAIC,EACFZ,EAAMa,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAI,CAAqBT,QAASS,EAAET,QAASC,WAAYQ,EAAER,YAAjDQ,EAAET,QAAU,EAAmD,IAKjG,OACE,iBAAKL,UAAWC,EAAmB,WACjC,wBAAI,cACJ,SAACc,EAAmB,CAACC,SANT,SAACC,GACflB,EAAMmB,QAAQD,EAAOE,YACvB,KAKI,gBAAKnB,UAAWC,EAAc,SAC3BU,MAIT,EAGMS,GAAcC,EAAAA,EAAAA,GAAiB,IAe/BN,GAAsBO,EAAAA,EAAAA,GAAU,CAAEC,KAAM,yBAAlBD,EAdP,SAACvB,GACpB,OACE,kBAAMiB,SAAUjB,EAAMyB,aAAa,WACjC,0BACE,SAACC,EAAA,EAAK,CAACC,KAAK,cAAcC,UAAWC,EAAAA,GAAUC,YAAY,eACzDC,SAAU,CAACC,EAAAA,EAAUX,QAEzB,0BACE,4BAAQ,iBAIhB,IAIA,EAAeY,EAAAA,KAAWxB,GC5B1B,GAJyByB,EAAAA,EAAAA,KATD,SAACC,GACvB,MAAO,CACLtB,MAAOsB,EAAMC,YAAYvB,MACzBO,YAAae,EAAMC,YAAYhB,YAEnC,GAIkD,CAChDD,QAAAA,EAAAA,IADuBe,CAEtBzB,GCjBH,EAAwE,sC,oBCyCxE,EAtCiC,SAACT,GAC9B,OAA8BqC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAASrC,EAAMwC,QAAO,eAA3CA,EAAM,KAAEC,EAAS,MAGtBC,EAAAA,EAAAA,YAAU,WACND,EAAUzC,EAAMwC,OACpB,GAAG,CAACxC,EAAMwC,SAaV,OACI,4BACMF,IACE,0BACI,iBAAMK,QAhBG,WACrBJ,GAAY,EAChB,EAcgD,SAAEvC,EAAMwC,QAAU,iCAGzDF,IACG,0BACI,kBAAOM,SAbA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,MAC9B,EAWiDC,WAAS,EAACC,OAlBhC,WACvBV,GAAY,GACZvC,EAAMkD,aAAaV,EACvB,EAgBoBO,MAAOP,QAM/B,EChBA,EAnBoB,SAACxC,GACjB,OAAKA,EAAMmD,SAMP,0BAII,iBAAKlD,UAAWC,EAAyB,WACrC,gBAAKC,IAAI,IAAIC,IAAKJ,EAAMmD,QAAQC,OAAOC,SACvC,SAAC,EAAwB,CAACb,OAAQxC,EAAMwC,OAAQU,aAAclD,EAAMkD,qBAXrE,SAACI,EAAA,EAAS,GAezB,ECPA,EATgB,SAACtD,GACf,OACE,4BACE,SAAC,EAAW,CAACmD,QAASnD,EAAMmD,QAASX,OAAQxC,EAAMwC,OAAQU,aAAclD,EAAMkD,gBAC/E,SAAC,EAAgB,MAGvB,E,oBCHaK,EAAgB,qGAsB1B,OAtB0B,yCAC3B,WACE,IAAIC,EAASnD,KAAKL,MAAMyD,OAAOC,OAAOF,OACjCA,IAEHA,EAASnD,KAAKL,MAAM2D,oBAElBH,EAAO,QAELnD,KAAKL,MAAMyD,OAAOG,SAAS,UAIjCvD,KAAKL,MAAM6D,eAAeL,GAC1BnD,KAAKL,MAAM8D,UAAUN,EACvB,GAAC,oBAID,WACE,OAAO,SAAC,GAAO,kBAAKnD,KAAKL,OAAK,IAAEmD,QAAS9C,KAAKL,MAAMmD,QAClDX,OAAQnC,KAAKL,MAAMwC,OAAQU,aAAc7C,KAAKL,MAAMkD,eACxD,KAAC,EAtB0B,CAAS1C,EAAAA,WAmCtC,GACEuD,EAAAA,EAAAA,KACE7B,EAAAA,EAAAA,KAXkB,SAACC,GAAK,MAAM,CAChCgB,QAAShB,EAAMC,YAAYe,QAC3BX,OAAQL,EAAMC,YAAYI,OAC1BmB,iBAAkBxB,EAAM6B,KAAKR,OAC7BS,OAAQ9B,EAAM6B,KAAKC,OACpB,GAM4B,CAAEC,eAAAA,EAAAA,GAAgBL,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAWZ,aAAAA,EAAAA,KACtEiB,EAAAA,EAHJ,CAKIZ,E","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileSatusWhithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__5OszT\",\"item\":\"MyPosts_item__w4xHQ\",\"postsBlock\":\"MyPosts_postsBlock__oOWrC\",\"posts\":\"MyPosts_posts__ruEKx\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__r7wXg\"};","import React, { Component } from 'react'\r\nimport Classes from './Post.module.css'\r\n\r\nexport class Post extends Component {\r\n    render(props) {\r\n       \r\n        return (\r\n            <div className={Classes.item}>\r\n                <img alt='#' src='https://static.vecteezy.com/system/resources/thumbnails/002/002/332/small/ablack-man-avatar-character-isolated-icon-free-vector.jpg'/>\r\n                {this.props.message}\r\n                <div>\r\n                <span>Like {this.props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { required, maxLengthCreator } from './../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\n\r\n\r\n\r\nexport const MyPosts = props => {\r\n  console.log(\"render\")\r\n  let postsElements =\r\n    props.posts.map(p => <Post key={p.message + 1} message={p.message} likesCount={p.likesCount} />)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n  return (\r\n    <div className={Classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={Classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default React.memo(MyPosts)","import { connect } from 'react-redux';\r\nimport { addPost,} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"bunner\":\"ProfileInfo_bunner__+yPsi\",\"descriptiomBlock\":\"ProfileInfo_descriptiomBlock__N8yD-\"};","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst ProfileStatusWhithHookst = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{props.status || \"This Profile hasn`t status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWhithHookst","import React from 'react'\r\nimport Classes from './ProfileInfo.module.css'\r\nimport Preloader from './../../common/Preloader/Preloader'\r\nimport ProfileStatusWhithHookst from './ProfileSatusWhithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={Classes.bunner}>\r\n                <img alt='#' src='https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/640px-Image_created_with_a_mobile_phone.png' />\r\n            </div>*/}\r\n            <div className={Classes.descriptiomBlock}>\r\n                <img alt='#' src={props.profile.photos.large} />\r\n                <ProfileStatusWhithHookst status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\n\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile'\r\nimport { setUserProfile, getUserProfile, getStatus, updateStatus } from './../../redux/profile-reducer'\r\n//import { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../../hoc/withRouter';\r\n\r\n\r\n\r\nexport class ProfileContainer extends Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      debugger\r\n      userId = this.props.authorizedUserId; //userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        userId=28375\r\n        if (!userId) {\r\n          this.props.router.navigate('/login')\r\n        }\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return <Profile {...this.props} profile={this.props.profile}\r\n      status={this.props.status} updateStatus={this.props.updateStatus} />\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId, //userId =state.auth.userId;\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\n\r\nexport default\r\n  compose(\r\n    connect(mapStateToProps, { setUserProfile, getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    //withAuthNavigate,\r\n  )(ProfileContainer)\r\n\r\n"],"names":["Post","props","className","Classes","alt","src","this","message","likesCount","Component","MyPosts","console","log","postsElements","posts","map","p","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","React","connect","state","profilePage","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","Preloader","ProfileContainer","userId","router","params","authorizedUserId","navigate","getUserProfile","getStatus","compose","auth","isAuth","setUserProfile","withRouter"],"sourceRoot":""}